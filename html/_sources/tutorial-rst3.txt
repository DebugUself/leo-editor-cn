.. rst3: filename: html.txt\tutorial-rst3.html

.. |---| unicode:: U+02015 .. for quotes
   :trim:
   
.. |br| raw:: html

   <br />

############################################
使用大纲创建文档
############################################

.. _`LaTeX`:    http://www.latex-project.org/
.. _`Python's`: http://www.python.org/
.. _`Sphinx`:   http://sphinx-doc.org/
.. _`Sphinx 文档`: http://sphinx-doc.org/contents.html
.. _`docutils`: http://docutils.sourceforge.net
.. _`reStructuredText`: http://docutils.sourceforge.net/rst.html
.. _`rST 入门`: http://sphinx-doc.org/rest.html
.. _`第一个教程`: tutorial-basics.html

..  "I am a huge fan of Leo. I think it's quite possibly the most
..  revolutionary programming tool I have ever used and it (along with the
..  Python language) has utterly changed my view of programming (indeed of
..  writing) forever."---Shakeeb Alireza

.. Leo's rst3 command converts Leo trees containing `reStructuredText`_ (rST) or `Sphinx`_ markup to HTML, PDF, `LaTeX`_ and other kinds of output files. This tutorial gives step-by-step instructions for using the rst3 command.

.. **Prerequisites**: Please make sure you have read the `first tutorial`_ before reading this one. If you are new to rST, please read the `rST primer`_. For full information about Sphinx, please read the `Sphinx documentation`_.

.. The rst3 command makes using rST or Sphinx *much* easier by automatically creating underlining for rST sections. To reorganize a document, just reorganize the corresponding Leo outline: you don't have to change underlining characters by hand.

.. The tutorial covers only the basic features of the rst3 command. This is enough to generate all of Leo's documentation!

.. CheatSheet.leo contains an expanded version of the example used in this tutorial. You can open CheatSheet.leo from Leo's help menu. 

Leo 的 rst3 命令, 可将包含 `reStructuredText`_ (rST) 或 `Sphinx`_ 标记的 Leo 树转化为 HTML, PDF, `LaTeX`_ 以及其他输出文件格式. 本教程提供了使用 rst3 命令的分步指导.

**先修知识**: 请确保你已提前阅读 `第一个教程`_. 如果你初次接触 rST, 请阅读 `rST 入门`_. 关于 Sphinx 的全部信息, 请阅读 `Sphinx 文档`_.

rst3 命令, 可自动创建 rST 部分的下划线, *极大* 简化 rST 或 Sphinx 的使用.  想重新组织一个文档, 只需重新组织 Leo 的对应大纲: 你无需手动修改下划线字符.

本教程仅包含 rst3 命令的基本特性. 这足以生成所有 Leo 文档! 

CheatSheet.leo 包含本教程示例的拓展版本. 你可以从 Leo 的帮助菜单打开 CheatSheet.leo.

.. contents:: Contents
    :depth: 3
    :local:

安装 docutils 和 (备选) sphinx
+++++++++++++++++++++++++++++++++++

.. The rst3 command requires the `docutils`_ Python package. You must also install the `Sphinx`_ package if you use sphinx markup. Sphinx gives Leo's and `Python's`_ web sites their distinctive appearance and features. After installing docutils or sphinx, you must restart Leo so that the new installation will take effect.

rst3 命令需要 `docutils`_ Python 包. 如果你使用 sphinx 标记, 你必须同样安装 `Sphinx`_ 包. Sphinx 给予 Leo 和 `Python's`_ 网站独特的外观和特性. 安装 docutils 或 sphinx 后, 你必须重启 Leo, 以使新安装生效.

创建 @rst 节点
++++++++++++++++++

.. index::
    pair: @rst Node; Tutorial
    
.. 1. Create a node someplace in your outline.

.. 2. Type this in the headline::

..         @rst myDocument.html
        
.. The @rst node, and all its descendants, represents your document.


1. 在你的大纲中创建一个节点.

2. 输入标题:

        @rst myDocument.html

@rst 节点及其后代节点, 代表了你的文档.

输出文件和中间文件
+++++++++++++++++++++++++++

.. The rst3 command applied to::

..     @rst myDocument.html
    
.. will generate an **output file**, myDocument.html, from this node and its children, grand-children, etc. The rst3 command creates the output file in the same directory as the .leo file containing the @rst node. You can specify other directories using absolute or relative paths. Examples::

用于 @rst myDocument.html 的 rst3 命令, 将从这个节点和它的子节点, 孙节点等, 生成一个 **输出文件**, myDocument.html. rst3 命令在同一文件夹中创建输出文件, 因为 .leo 文件包含 @rst 节点.  你可以使用绝对或相对路径, 指定其他文件夹. 例如:

..     @rst myDocument.html        # in same folder as the .leo file
..     @rst html/myDocument.html   # in a subfolder
..     @rst ~/docs/myDocument.html # an absolute path to the folder
    
    
    @rst myDocument.html        # 与 .leo 文件在同一文件夹
    @rst html/myDocument.html   # 在子文件夹
    @rst ~/docs/myDocument.html # 文件夹的绝对路径
    
.. The rst3 command writes an **intermediate file** in the same directory as the output file. This intermediate file contains the reStructuredText markup generated by the rst3 command. It has the suffix .txt::

..     myDocument.html.txt

rst3 命令在输出文件的同一目录下生成 **中间文件**, 其包含由 rst3 命令生成的 reStructuredText 标记, 为 .txt 后缀::

    myDocument.html.txt

选择 docutils 或 sphinx
++++++++++++++++++++++++++

.. Put the rst3_call_docutils setting in the @settings tree in the .leo file containing the @rst node. This setting determines whether to use plain rST markup or full sphinx markup. To use plain reStructuredText markup::

..    @bool rst3_call_docutils = True
    
.. To use sphinx markup::

..    @bool rst3_call_docutils = False


将 rst3_call_docutils 设置放在包含 @rst 节点的 .leo 文件的 @settings 树中, 以决定是使用纯 rST 标记还是全部 sphinx 标记. 使用纯 reStructuredText 标记:

    @bool rst3_call_docutils = True
    
使用 sphinx 标记:
    
    @bool rst3_call_docutils = False

设置 sphinx 的 conf.py 文件
********************************

.. When using sphinx you must ensure that sphinx's conf.py file is configured so that it will find the intermediate files created by the rst3 command. For example, the conf.py file for Leo's docs contains the following::

使用 sphinx , 你必须确保 sphinx 的 conf.py 文件已配置, 以发现由 rst3 命令创建的中间文件.
例如, Leo 文档的 conf.py 包含如下内容::

    source_suffix = '.html.txt'
    
.. This "matches" the form of the intermediate files.  For example, given::

其 "匹配" 中间文件的形式. 例如, 提供::

    @rst myDocument.html
    
.. and the default value for the rst3_write_intermediate_extension setting::

rst3_intermediate_extension 的默认取值设置::

    @string rst3_write_intermediate_extension = .txt
    
.. the name of intermediate file will be::

中间文件的名称将是:

    myDocument.html.txt

.. myDocument.html.txt is the **input** file for sphinx.

myDocument.html.txt 是 shpinx 的 **输入** 文件.

在 @rst 节点中写标题
+++++++++++++++++++++++++++

.. Put something like this in the body of the @rst node::
在 @rst 节点的内容文本中, 输入::

..    #############
..    War and Peace
..    #############
    
    #############
    战争与和平
    #############
    
.. rST markup uses over/underlining to indicate chapter titles. Put a **overline** consisting of pounds signs above the title (War and Peace), and an identical **underline** of pound signs below as shown. rST markup for chapter titles is a bit picky:

rST 标记使用上/下线表明单元标题.  在标题(战争与和平)上, 输入井号组成的 **上线**, 在其下方输入同样的 **下线**. rST 对单元标题的标记有点麻烦. 

.. - under/overlines must be at least 4 characters long
.. - under/overlines must be at least as long as the title.
.. - The overline and underline must be identical.

- 上/下线必须包含4个字符
- 上/下线必须至少与标题等长
- 上线与下线必须完全一样

.. In addition, the rst3 command requires that the "#" character be used in the over/underlines for chapter titles.

另外, rst3 命令要求单元标题的上下线使用 "#" 字符

开始写第一单元
+++++++++++++++++++++

.. Put introductory words in the body of the @rst node itself:

在 @rst 节点中, 输入正文::

    "Well, Prince, so Genoa and Lucca are now just family estates of the
    Buonapartes. But I warn you, if you don't tell me that this means war,
    if you still try to defend the infamies and horrors perpetrated by that
    Antichrist--I really believe he is Antichrist--I will have nothing more
    to do with you and you are no longer my friend, no longer my 'faithful
    slave,' as you call yourself! But how do you do? I see I have
    frightened you--sit down and tell me all the news."
    
    It was in July, 1805, and the speaker was the well-known Anna Pavlovna
    Scherer, maid of honor and favorite of the Empress Marya Fedorovna.
    With these words she greeted Prince Vasili Kuragin, a man of high rank
    and importance, who was the first to arrive at her reception. Anna
    Pavlovna had had a cough for some days. She was, as she said, suffering
    from la grippe; grippe being then a new word in St. Petersburg, used
    only by the elite.

创建部分和子部分
++++++++++++++++++++++++

..
    To create a new section, subsection, etc., in the output file:
    
    1. Create a new outline node, as some descendant of the @rst node.
    
    2. **The new node's headline becomes the section's title**.
    
    3. Type the contents of the section in the body text of the node.
    
    That's all there is to it:
    
    - **The rst3 command generates rST underlining automatically**.
    
    - **You reorganize your document by reorganizing nodes**.
    
    There is *no* need to change markup when reorganizing your document, a huge improvement over writing "raw" rST.

   
要想创建一个部分, 子部分等, 则在输出文件中:

1. 创建一个新的大纲节点, 作为 @rst 节点的后代.

2. **新节点的标题成为部分的标题.**

3. 在节点的内容文本中, 输入部分的内容.

这就是全部:

- **rst3 命令自动生成 rST 下划线**.

- **你通过重组节点, 重组你的文档.**

重组文档是, *没有* 必要修改标记, 相比海量的输入 "原始" rST, 这是一个巨大的进步.

撰写你的文档
++++++++++++++++++

..
    Now you write your novel, short story, documentation or whatever. Organize your work as always:
    
    | **nodes create sections, subsections, sub-sub-sections, etc.**
    | **depending on their position in the outline**.

现在你写了小说, 短小故事, 文档或其他. 总是这样组织你的工作:

| **节点创建部分, 子部分, 子子部分, 等.**
| **依赖它们在大纲中的位置.**

运行 rst3 命令
++++++++++++++++++

.. index::
    pair: rst3 Command; Tutorial

.. ``<Alt-X>rst3<Return>`` runs the rst3 command.

``<Alt-X>rst3<Return>`` 运行 rst3 命令.

.. 
    - If the present node is an @rst node, or a descendant node of an @rst node, the rst3 command applies to the nearest ancestor @rst node.
    
    - Otherwise, the rst3 command applies to all descendant @rst trees.

- 如果当前节点是一个 @rst 节点, 或 @rst 节点的后代节点, rst3 命令适用于最近的祖先 @rst 节点.

- 其他情况, rst3 命令适用于所有后代 @rst 树.

.. If @bool rst3_call_docutils is True, the rst3 command will call docutils automatically to create the output files. For more information about Leo settings, see `this section <tutorial-basics.html#configuring-leo>`_.

如果 @bool rst_call_docutils 为真, rst3 命令将自动调用 doctils 生成输出文件. 更多关于 Leo 设置, 请见 `这部分 <tutorial-basics.html#configuring-leo>`_.

.. When using sphinx, run sphinx's "make" utility after running the rst3 command to create the final output files.

使用 sphinx 时, 在运行 rst3 命令后, 运行 sphinx 的 "make" 工具, 创建最后的输出文件.

.. 
    **Errors and warnings**:
    
    1. Install docutils and then restart Leo if you see this error::
    
        writeToDocutils: docutils not present
        
    2. ​Leo has a default stylesheet ​​that centers titles and makes them big and bold, so you can disregard messages such as::
    
        stylesheet not found <path-to>default.css
    
    
 **错误和警告**:   
 
1. 安装 docutils 时, 如果看见下面错误, 重启 Leo::

    writeToDocutils: docutils not present
    
2. Leo 有一个默认的样式表, 可以加大加粗标题, 所以你可以忽视如下信息::
    
    stylesheet not found <path-to>default.css

其他主题
++++++++++++



\@rst-no-head 覆盖部分
**************************

..
    Sometimes you want to organize text without creating sections:
    
    1. Create an outline node to organize your text.
    
    2. Type the following in the headline::
    
        @rst-no-head <any text: it is ignored>
        
    The rst3 command adds the body text of this node to the previous section:
    
    - The headline is ignored.
    - The @rst-no-head node does not change the rST section structure in any way.


有时, 你想组织文本, 而不需创建部分:

1. 创建一个大纲节点, 组织你的文本.

2. 输入标题::

    @rst-no-head <any text: it is ignored>
    
rst3 命令会在之前的部分, 增加这个节点的内容文本:

- 标题会被忽视
- @rst-no-head 节点怎么都不会改变 rST 的部分结构

\@rst-ignore & @rst-ignore-tree 忽视文本
********************************************

..
    It is often useful to put reference material in your @rst tree that will *not* be included in the actual output. To have the rst3 command ignore a single node, type this in the node's headline::
    
        @rst-ignore <ignored-text>
        
    Neither the headline nor body text will be part of the output file.
        
    To have the rst3 command ignore a node and all its descendants, type this in the node's headline::
    
        @rst-ignore-tree <ignored-text>
    

有时将参考资料放在你的 @rst 树中也很有用, 其 *不会* 出现在实际的输出中. 要想让 rst3 命令忽略单个节点, 可在节点标题输入::

    @rst-ignore <ignored-text>
    
    
如此, 标题和内容文本均不会出现在输出文件中.

要想让 rst3 命令忽略一个节点及它的所有后代, 可在标题输入::

    @rst-ignore-tree <ignored-text>

插入原始标记
******************

..
    The `rST manual <http://docutils.sourceforge.net/docs/user/rst/quickref.html#directives>`_ tells how to insert "raw" markup into the output. For example, Leo's documentation defines the following::
        
        .. |---| unicode:: U+02015 .. for quotes
           :trim:
    
    Now ``---`` inserts ---, the unicode "quotation dash" used to indicate the author of quotations. Note that rST automatically turns ``--`` into a dash: --.
    
    The rST ``|`` markup breaks text into specific lines, but there are times when it can't be used.  The following inserts a line break into text::
    
        .. |br| raw:: html
        
           <br />


`rST 手册 <http://docutils.sourceforge.net/docs/user/rst/quickref.html#directives>`_ 介绍了如何将 "原始" 标记插入至输出中. 例如, Leo 的文档定义如下::
    
    .. |---| unicode:: U+02015 .. for quotes
       :trim:

现在, ``---`` 插入了 ---, unicode "引号" 表明引用的作者. 注意 rST 自动转换 `--` 为 


.. The rST ``|`` markup breaks text into specific lines, but there are times when it can't be used.  The following inserts a line break into text::

rST ``|`` 标记分拆文本为指定行, 但是有些场景无法使用. 在文本中插入行结束符的方式如下::


    .. |br| raw:: html
    
       <br />

总结
++++++

..
    - The rst3 command converts an @rst tree to an output file and an intermediate file.
    
    - docutils uses the output file; sphinx uses the intermediate file.
    
    - Settings starting with "rst3" control how the rst3 command works.
    
    - Within @rst trees, headlines become rST sections.
    
    - Sections levels in the generated rST correspond to outline levels in Leo.
    
    - You reorganize your rST documents just by reorganizing the corresponding @rst tree.
      
    - The rst3 command works acts on the nearest ancestor @rst node, if any, or on all descendant @rst nodes.
      
    - @rst-no-head nodes insert text (or markup) without an rST headline.
    
    - The rst3 command ignores @rst-ignore nodes and @rst-ignore-tree trees.
    
    - The @button make-sphinx node in LeoDocs.leo calls sphinx automatically.
    
    - CheatSheet.leo contains an expanded version of the example used in this tutorial. |br|
      You can open CheatSheet.leo from Leo's help menu.
      
    - The rst3 command provides *many* other capabilities. For details, see `the rst3 chapter <rstplugin3.html>`_.
      
  
  
- rst3 命令会转换 @rst 树为一个输出文件和中间文件.

- docutils 使用输出文件; sphinx 使用中间文件.

- 以 "rst3" 开头的设置, 控制 rst3 命令的运行.

- 在 @rst 树中, 标题将成为 rST 的部分.

- 生成的 rST 的部分层级, 对应 Leo 中的大纲层级.

- 你通过重组对应的 @rst 树来重组你 rST 文档.

- rst3 命令作用于最近的祖先 @rst 节点, 或所有 @rst 节点的所有后代.

- @rst-no-head 节点插入文本(或标记) , 无需 rST 标题.

- rst3 命令将忽视 @rst-ignore 节点和 @rst-ignore-tree 节点.

- LeoDocs.leo 中的 @button make-sphinx 节点, 自动调用 sphinx.

- CheatSheet.leo 包含了教程示例的扩展版本. |br|
你可以从 Leo 的帮助菜单打开 CheatSheet.leo

- rst3 命令提供了 *很多* 其他功能. 具体细节, 请见 `rst3 单元 <rstplugin3.html>`_.

进阶学习
++++++++++++

..
    You now know enough to get started with the rst3 command. Some possible next steps are:
    
    - Look at Leo's own documentation in LeoDocs.leo. Discover how the nodes in this tree correspond to the documentation you see before you.
       
    - LeoDocs.leo has an @button make-sphinx script that calls sphinx automatically.
    
    - Create your own @rst nodes. Run the rst3 command on them and see what happens.
    
    - If you get stuck, please ask for help at https://groups.google.com/forum/#!forum/leo-editor.


现在你已具备足够知识, 可开始使用 rst3 命令. 可能的下一步行动:

- 在 LeoDocs.leo 中, 阅读 Leo 自己的文档. 探索树中的节点, 与你面前的网页文档如何对应.

- LeoDocs.leo 有一个 @button make-sphinx 脚本, 可自动调用 sphinx.

- 创建你自己的 @rst 节点. 运行 rst3 命令, 观察结果.

- 如果你遇到问题, 可求助于 https://groups.google.com/forum/#!forum/leo-editor.

